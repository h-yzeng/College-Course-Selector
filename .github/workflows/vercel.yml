name: Deploy to Vercel (Static Site)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show working directory contents
        run: |
          pwd
          ls -la

      - name: Create .vercel/project.json
        run: |
          mkdir -p .vercel
          cat > .vercel/project.json <<EOF
          {
            "projectId": "${VERCEL_PROJECT_ID}",
            "orgId": "${VERCEL_ORG_ID}"
          }
          EOF
          cat .vercel/project.json

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Log expected site files
        run: |
          ls -la index.html || true
          ls -la styles.css || true
          ls -la script.js || true
          ls -la dataset || true

      - name: Vercel pull
        run: vercel pull --yes --environment=production --token "$VERCEL_TOKEN"

      - name: Build
        run: vercel build --prod --token "$VERCEL_TOKEN"

      - name: Deploy
        id: deploy
        run: |
          URL=$(vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN")
          echo "prod_url=$URL" >> $GITHUB_OUTPUT

      - name: Summary
        if: always()
        run: |
          echo "### Vercel deployment" >> $GITHUB_STEP_SUMMARY
          echo "- Production: ${{ steps.deploy.outputs.prod_url }}" >> $GITHUB_STEP_SUMMARY
