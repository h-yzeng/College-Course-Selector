name: Deploy to Vercel (Static Site)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_SCOPE: ${{ secrets.VERCEL_SCOPE }}       
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_NAME: college-course-selector

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug (files & env)
        run: |
          echo "Node (pre):" && node -v || true
          echo "NPM  (pre):" && npm -v  || true
          echo "Repo files:" && ls -la
          echo ".vercel dir:" && ls -la .vercel || true
          if [ -f .vercel/project.json ]; then
            echo "project.json:" && cat .vercel/project.json
          else
            echo "project.json not found"
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Link project (non-interactive)
        run: |
          if [ ! -f ".vercel/project.json" ]; then
            echo "Linking to Vercel project '$VERCEL_PROJECT_NAME' under scope '$VERCEL_SCOPE'..."
            vercel link --yes \
              --project "$VERCEL_PROJECT_NAME" \
              --scope "$VERCEL_SCOPE" \
              --token "$VERCEL_TOKEN"
          else
            echo "project.json already present; skipping link."
          fi
          echo "Linked file:" && cat .vercel/project.json

      - name: Sanity checks
        run: |
          test -f index.html
          test -f app.js
          test -f styles.css
          test -f data/items.json
          test -f .vercel/project.json

      - name: Vercel pull (preview or production)
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"
          else
            vercel pull --yes --environment=production --token "$VERCEL_TOKEN"
          fi

      - name: Build
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            vercel build --token "$VERCEL_TOKEN"
          else
            vercel build --prod --token "$VERCEL_TOKEN"
          fi

      - name: Deploy
        id: deploy
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            URL=$(vercel deploy --prebuilt --token "$VERCEL_TOKEN")
            echo "preview_url=$URL" >> $GITHUB_OUTPUT
          else
            URL=$(vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN")
            echo "prod_url=$URL" >> $GITHUB_OUTPUT
          fi

      - name: Summary
        if: always()
        run: |
          echo "### Vercel deployment" >> $GITHUB_STEP_SUMMARY
          echo "- Preview: ${{ steps.deploy.outputs.preview_url }}" >> $GITHUB_STEP_SUMMARY
          echo "- Production: ${{ steps.deploy.outputs.prod_url }}" >> $GITHUB_STEP_SUMMARY
